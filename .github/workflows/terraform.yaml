name: terraform

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:

  infra:
    name: Run infra
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.ROLE_TO_ASSUME }}
          role-session-name: ninja-vpn
          aws-region: ${{ vars.AWS_REGION }}
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.4
      - name: Install sops
        run: |
          SOPS_VERSION=$(curl -sL https://api.github.com/repos/mozilla/sops/releases/latest | jq -r '.tag_name')
          wget -O /tmp/sops https://github.com/mozilla/sops/releases/download/${SOPS_VERSION}/sops-${SOPS_VERSION}.linux.amd64
          chmod +x /tmp/sops
          sudo cp /tmp/sops /usr/local/bin/sops
      - name: Detect changes in go code
        id: detect_changes
        run: |
          if [[ -z $(git diff HEAD -- sites/backend/*) ]]; then
            echo "go_changes=false" >> $GITHUB_OUTPUT
          else
            echo "go_changes=true" >> $GITHUB_OUTPUT
          fi
      - name: Set up Go
        if: steps.detect_changes.outputs.go_changes == 'true'
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.1
      - name: Rebuild golang binaries
        if: steps.detect_changes.outputs.go_changes == 'true'
        run: |
          make update-lambda-code
          make update-lambda-trigger-code
      - name: Terraform Plan
        run: |
          make decrypt-config
          make tf-test TF_TARGET=api
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: |
          make tf-apply TF_TARGET=api
